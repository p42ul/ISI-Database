# # Setting working directories
setwd("D:\\Files\\OneDrive - McGill University\\Classes\\MUMT 609 - Project\\ScriptAnimation\\data")
# Libraries
library(tidyverse)
library(plotly)
library(dash)
library(dashCoreComponents)
library(dashHtmlComponents)
# Functions definition
sunburst <- function(d, IDs, Values, Parents, Subs, Labels) {
res <- data.frame('ids' = IDs,
'parents' = Parents,
'values' = Values,
stringsAsFactors = F)
for (col in 8:ncol(d)) {
header <- colnames(d[col])
if (any(str_detect(header, IDs)) && colSums(d[header], na.rm = T)) {
for (sub in IDs) {
if (str_detect(header, sub) && !(any(str_detect(header, Subs)))) {
res <- rbind(res, c(header, sub, colSums(d[header], na.rm = T)))
} else if (any(str_detect(header, Subs)) && any(str_detect(sub, Subs)) && str_detect(header, sub)) {
res <- rbind(res, c(header, sub, colSums(d[header], na.rm = T)))
}}}
}
res$labels = Labels
return(res)
}
plot <- function(d) {
fig <- plot_ly(d, ids = ~ids, labels = ~labels,
parents = ~parents, values = ~values, type = 'sunburst', branchvalues = 'total', domain=list(column=1))
return(fig)
}
# Data importation
all.data <- read.csv("installationsList.csv", header=T, sep=",", na.strings=c("NA", "N/A", "#VALUE!"))
# Initialization of Charts
# Artistic Intention
AIID <- c("AI", "CO", "AU", "IV", "LS", "LP", "SD", "LI", "RS", "SD_Mat", "LS_Dyn")
AIParents <- c("", "AI", "AI", "AI", "AI", "AI", "AI", "AI", "AI", "SD", "LS")
AIValues <- c(372, 40, 38, 62, 38, 37, 80, 34, 43, 73, 23)
AISubs <- c("SD_Mat", "LS_Dyn")
AILabels <- c("Artistic<br>Intention", "Context", "Audience", "Intervention<br>Visibility", "Listening<br>Spot",
"Lifespan", "Sound<br>Design", "Lighting<br>Design", "Role of<br>Sound", "Materials", "Dynamic",
"Exhibition", "Outdoor", "Indoor", "School", "Prototype", "Adults", "Children", "Both", "None", "Non-Sonic<br>Elements",
"Visual<br>interface", "Sonic<br>Elements", "Pathway", "No Specific<br>Path", "Sweet<br>Spot", "Ephemeral",
"Temporary", "Semi-Permanent", "Abstract", "Referential", "Sonification", "Local<br>Recordings",
"Pre-existing<br>Materials", "Auto-Generative", "Site's Acoustics<br>Involved",
"None", "Spotlights", "Dynamic", "Expressive", "Informational", "Didactic"
)
# Interaction
INID <- c("IN", "IA", "IDof", "ODof", "FT", "MC", "IT")
INParents <- c("", "IN", "IN", "IN", "IN", "IN", "IN")
INValues <- c(264, 40, 39, 37, 58, 37, 53)
INSubs <- c("rien")
INLabels <- c("Interaction", "Inter-Actors", "Input Degrees<br>Of Freedom", "Output Degrees<br>Of Freedom",
"Feedback<br>Type", "Musical<br>Control", "Interaction<br>Type", "Many", "Few", "One", "None",
"One", "Several", "One", "Two", "Three or<br>More", "Visual", "Haptic", "Sonic", "Heat",
"Process", "Note-Level", "Timbral", "Global<br>Activity", "Network", "Embodied", "Visitor's<br>Motion",
"Visitor's<br>Sounds", "Natural<br>Elements"
)
# System Design
SDID <- c("SyD", "TS", "SP", "SG", "TS_Env", "SP_Num", "SP_Head", "SP_Point", "SP_Cont", "SP_Dir", "SG_SoundObj")
SDParents <- c("", "SyD", "SyD", "SyD", "TS", "SP", "SP", "SP", "SP", "SP", "SG")
SDValues <- c(219, 43, 122, 54, 4, 28, 8, 34, 22, 30, 16)
SDSubs <- c("TS_Env", "SP_Num", "SP_Head", "SP_Point", "SP_Cont", "SP_Dir", "SG_SoundObj")
SDLabels <- c("System<br>Design", "Type of<br>Receiver", "Spatialization", "Sound<br>Generation", "Environment",
"Number of<br>Sources", "Headphones", "Diffusion<br>Orientation", "Control",
"Directivity", "Sound<br>Object", "Pressure<br>Pad", "Piezoelectric<br>Sensor",
"Accelerometer", "Microphone", "Camera", "Motion<br>Sensing<br>Device", "Proximity<br>Sensor",
"Server", "Touch-Sensitive<br>Device", "Torque<br>Sensor", "Potentiometer", "Solar<br>Panel",
"Heat<br>Sensor", "Wind<br>Sensor", "One", "Two", "Multiple", "Stereo", "Towards the<br>Same Point",
"Towards<br>Different Points", "Dynamic", "Channel-Based", "Algorithm-Based", "Directive", "Omnidirective",
"Speakers", "Electronic", "Mechanical", "Resonant", "Musical<br>Instrument"
)
#AI <- sunburst(all.data, AIID, AIValues, AIParents, AISubs, AILabels)
#plot(AI)
#IN <- sunburst(all.data, INID, INValues, INParents, INSubs, INLabels)
#plot(IN)
SD <- sunburst(all.data, SDID, SDValues, SDParents, SDSubs, SDLabels)
#plot(SD)
df <- SD$labels
fig <- plot_ly()
fig <- fig %>% add_trace(
type='sunburst',
ids=~SD$ids,
labels=~SD$labels,
parents=~SD$parents,
values=~SD$values,
branchvalues = 'total',
domain=list(column=1)
)
library(dash)
library(dashCoreComponents)
library(dashHtmlComponents)
app <- Dash$new(external_stylesheets = "https://codepen.io/chriddyp/pen/bWLwgP.css")
app$layout(
htmlDiv(
list(
htmlH1('Artistic Intention'),
htmlDiv(children = "Sunburst chart"),
dccGraph(figure=fig)
)
)
)
app$run_server(debug=TRUE, dev_tools_hot_reload=FALSE)
View(SD)
